# Email Filter Configuration
version: "1.0"

# OpenAI Configuration
openai:
  api_key: "your_openai_api_key_here"  # Can be overridden by OPENAI_API_KEY env var
  model: "gpt-4o-mini"  # Can be overridden by MAILMIND_OPENAI_MODEL env var
  temperature: 0.7  # Can be overridden by MAILMIND_OPENAI_TEMPERATURE env var
  max_tokens: 1000  # Can be overridden by MAILMIND_OPENAI_MAX_TOKENS env var
  batch_size: 10  # Can be overridden by MAILMIND_OPENAI_BATCH_SIZE env var

# Email Accounts
accounts:
  - name: "Personal Gmail"
    email: "your.email@gmail.com"
    password: "your_app_password_here"  # Use app password for Gmail
    imap_server: "imap.gmail.com"
    imap_port: 993
    ssl: true
    folders:
      - "INBOX"
    # Per-account categories
    categories:
      - name: "SPAM"
        description: "Unwanted or malicious emails"
        foldername: "[Spam]"
      - name: "RECEIPTS"
        description: "Purchase confirmations and receipts"
        foldername: "[Receipts]"
      - name: "PROMOTIONS"
        description: "Marketing and promotional emails"
        foldername: "[Promotions]"
      - name: "UPDATES"
        description: "Updates and notifications"
        foldername: "[Updates]"
      - name: "INBOX"
        description: "Important emails that need attention"
        foldername: "INBOX"
      - name: "PERSONAL"
        description: "Personal communications from friends and family"
        foldername: "[Personal]"
    
  - name: "Work Email"
    email: "your.work@example.com"
    password: "your_password_here"
    imap_server: "imap.example.com"
    imap_port: 993
    ssl: true
    folders:
      - "INBOX"
      - "Important"
    # Different categories for work email
    categories:
      - name: "SPAM"
        description: "Unwanted or malicious emails"
        foldername: "Junk"
      - name: "CLIENTS"
        description: "Emails from clients or about client projects"
        foldername: "Clients"
      - name: "INTERNAL"
        description: "Internal company communications"
        foldername: "Internal"
      - name: "PROJECTS"
        description: "Project-related emails"
        foldername: "Projects"
      - name: "MEETINGS"
        description: "Meeting invitations and updates"
        foldername: "Meetings"
      - name: "INBOX"
        description: "Important emails that need immediate attention"
        foldername: "INBOX"

# Processing Options
processing:
  # Whether to move emails after categorization
  move_emails: true  # Can be overridden by MAILMIND_MOVE_EMAILS env var
  
  # Maximum number of emails to process per run
  max_emails_per_run: 100  # Can be overridden by MAILMIND_MAX_EMAILS env var
  
  # Days to look back for processing
  lookback_days: 30  # Can be overridden by MAILMIND_LOOKBACK_DAYS env var
  
  # Minimum samples per category for training
  min_samples_per_category: 5  # Can be overridden by MAILMIND_MIN_SAMPLES env var
  
  # Test set size for training
  test_size: 0.2  # Can be overridden by MAILMIND_TEST_SIZE env var
  
  # IMAP IDLE timeout in seconds (default: 29 minutes)
  # Most servers disconnect after 30 minutes of inactivity
  idle_timeout: 1740  # Can be overridden by MAILMIND_IDLE_TIMEOUT env var
  
  # Delay in seconds before reconnecting after an error
  reconnect_delay: 5  # Can be overridden by MAILMIND_RECONNECT_DELAY env var

# Logging Configuration
logging:
  # Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
  level: "INFO"  # Can be overridden by MAILMIND_LOG_LEVEL env var
  
  # Log file path (optional)
  file: "~/.mailmind/logs/mailmind.log"  # Can be overridden by MAILMIND_LOG_FILE env var
  
  # Log format
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"  # Can be overridden by MAILMIND_LOG_FORMAT env var

# Local State System
# The application now uses a local state system to track processed emails
# instead of adding flags to emails. This state is stored in:
# ~/.emailfilter/processed_emails.db
#
# You can manage this state using the CLI:
# - View state: python -m emailfilter.cli state view
# - Clean state: python -m emailfilter.cli state clean
# - Reset state: python -m emailfilter.cli state reset 